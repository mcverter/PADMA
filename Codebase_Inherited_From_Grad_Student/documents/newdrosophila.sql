CREATE TABLE  "ACCESS_RIGHT" 
   (	"ACC_RIGHT_ID" NUMBER NOT NULL ENABLE, 
	"ACC_RIGHT_DESC" VARCHAR2(30) NOT NULL ENABLE, 
	 CONSTRAINT "PK_ACCESS_RIGHT" PRIMARY KEY ("ACC_RIGHT_ID") ENABLE
   )
/
CREATE TABLE  "CLIENT" 
   (	"C_ID" VARCHAR2(30) NOT NULL ENABLE, 
	"TITLE" VARCHAR2(10), 
	"LNAME" VARCHAR2(60), 
	"MNAME" VARCHAR2(20), 
	"FNAME" VARCHAR2(20), 
	"ADD_1" VARCHAR2(40), 
	"ADD_2" VARCHAR2(40), 
	"CITY" VARCHAR2(20), 
	"STATE" VARCHAR2(20), 
	"ZIP" VARCHAR2(10), 
	"PHONE" VARCHAR2(15), 
	"EMAIL" VARCHAR2(30), 
	"IND" VARCHAR2(100), 
	"PROF" VARCHAR2(100), 
	"ACC_RIGHT_ID" NUMBER, 
	"DEL_FLAG" VARCHAR2(1), 
	"CREATED_BY" VARCHAR2(30), 
	"CREATED_ON" DATE, 
	"UPDATED_BY" VARCHAR2(30), 
	"UPDATED_ON" DATE, 
	"USER_ID" VARCHAR2(15) NOT NULL ENABLE, 
	"PASSWORD" VARCHAR2(250) NOT NULL ENABLE, 
	"LAST_LOGIN" DATE, 
	"TOTAL_LOGIN" NUMBER NOT NULL ENABLE, 
	"COUNTRY" VARCHAR2(50), 
	"DATE_APPLIED" DATE, 
	 CONSTRAINT "PK_CLIENT" PRIMARY KEY ("C_ID") ENABLE, 
	 CONSTRAINT "CLIENT_USERID" UNIQUE ("USER_ID") ENABLE, 
	 CONSTRAINT "CLIENT_FK_ACC_RIGHT" FOREIGN KEY ("ACC_RIGHT_ID")
	  REFERENCES  "ACCESS_RIGHT" ("ACC_RIGHT_ID") ENABLE
   )
/
CREATE TABLE  "COUNTRY" 
   (	"COUNTRYID" NUMBER, 
	"COUNTRY" VARCHAR2(40)
   )
/
CREATE TABLE  "EXP_MASTER" 
   (	"EXP_NAME" VARCHAR2(50) NOT NULL ENABLE, 
	"EXP_DESC" VARCHAR2(4000), 
	"DEL_FLAG" VARCHAR2(1), 
	"CREATED_BY" VARCHAR2(30), 
	"CREATED_ON" DATE, 
	"UPDATED_BY" VARCHAR2(30), 
	"UPDATED_ON" DATE, 
	 CONSTRAINT "PK_EXP_MASTER" PRIMARY KEY ("EXP_NAME") ENABLE
   )
/
CREATE TABLE  "EXPERIMENT" 
   (	"PROB_ID" VARCHAR2(50) NOT NULL ENABLE, 
	"EXP_NAME" VARCHAR2(50) NOT NULL ENABLE, 
	"CATG" VARCHAR2(20) NOT NULL ENABLE, 
	"SPEC" VARCHAR2(20) NOT NULL ENABLE, 
	"SUBJ" VARCHAR2(20) NOT NULL ENABLE, 
	"REG_VAL" VARCHAR2(2), 
	"OPEN" VARCHAR2(20), 
	"DEL_FLAG" VARCHAR2(1), 
	"CREATED_BY" VARCHAR2(30), 
	"CREATED_ON" DATE, 
	"UPDATED_BY" VARCHAR2(30), 
	"UPDATED_ON" DATE, 
	 CONSTRAINT "PK_EXP" PRIMARY KEY ("PROB_ID", "EXP_NAME") ENABLE, 
	 CONSTRAINT "EXP_FK_CRE_CLIENT" FOREIGN KEY ("CREATED_BY")
	  REFERENCES  "CLIENT" ("C_ID") ENABLE, 
	 CONSTRAINT "EXP_FK_UPD_CLIENT" FOREIGN KEY ("UPDATED_BY")
	  REFERENCES  "CLIENT" ("C_ID") ENABLE, 
	 CONSTRAINT "EXP_FK_EXP_MASTER" FOREIGN KEY ("EXP_NAME")
	  REFERENCES  "EXP_MASTER" ("EXP_NAME") ENABLE
   )
/
CREATE UNIQUE INDEX  "PK_EXP_MASTER" ON  "EXP_MASTER" ("EXP_NAME")
/
CREATE UNIQUE INDEX  "PK_EXP" ON  "EXPERIMENT" ("PROB_ID", "EXP_NAME")
/
CREATE UNIQUE INDEX  "PK_CLIENT" ON  "CLIENT" ("C_ID")
/
CREATE UNIQUE INDEX  "PK_ACCESS_RIGHT" ON  "ACCESS_RIGHT" ("ACC_RIGHT_ID")
/
CREATE UNIQUE INDEX  "CLIENT_USERID" ON  "CLIENT" ("USER_ID")
/
CREATE OR REPLACE PROCEDURE  "USERMANAGEMENT_STEP2" 
(

PARAM_ACCRIGHTID  IN VARCHAR2,
PARAM_CREATEDBY  IN VARCHAR2,
PARAM_C_ID  IN VARCHAR2)
is
begin
     UPDATE CLIENT SET ACC_RIGHT_ID= PARAM_ACCRIGHTID, CREATED_BY=PARAM_CREATEDBY,CREATED_ON=SYSDATE
     WHERE C_ID=PARAM_C_ID;
end;
/
 CREATE OR REPLACE PROCEDURE  "USERMANAGEMENT" 
(
PARAM_TITLE IN VARCHAR2,
PARAM_LNAME IN VARCHAR2,
PARAM_MNAME IN VARCHAR2,
PARAM_FNAME IN VARCHAR2,
PARAM_ADD_1 IN VARCHAR2,
PARAM_ADD_2 IN VARCHAR2,
PARAM_CITY IN VARCHAR2,
PARAM_STATE IN VARCHAR2,
PARAM_ZIP IN VARCHAR2,
PARAM_COUNTRY IN VARCHAR2,
PARAM_PHONE IN VARCHAR2,
PARAM_EMAIL IN VARCHAR2,
PARAM_IND IN VARCHAR2,
PARAM_PROF IN VARCHAR2,
PARAM_USER_ID IN VARCHAR2,
PARAM_PASSWORD IN VARCHAR2)
is
begin
     INSERT INTO CLIENT 
         (C_ID,TITLE,LNAME,MNAME,FNAME,ADD_1,ADD_2,CITY,STATE,ZIP,PHONE,EMAIL,IND,PROF,USER_ID,PASSWORD,COUNTRY,
         DATE_APPLIED,TOTAL_LOGIN,ACC_RIGHT_ID,DEL_FLAG)
     VALUES(
         CLIENT_ID.NEXTVAL,PARAM_TITLE,PARAM_LNAME,PARAM_MNAME,PARAM_FNAME,PARAM_ADD_1,PARAM_ADD_2,PARAM_CITY,PARAM_STATE,
         PARAM_ZIP,PARAM_PHONE,PARAM_EMAIL,PARAM_IND,PARAM_PROF,PARAM_USER_ID,PARAM_PASSWORD,PARAM_COUNTRY,SYSDATE,0,0,0        
     );

end;
/
 CREATE OR REPLACE PROCEDURE  "REACTIVATE" 
(
PARAM_UPDATED_BY  IN VARCHAR2,
PARAM_USER_ID IN VARCHAR2)
is
begin
     UPDATE CLIENT SET DEL_FLAG='0', UPDATED_BY=PARAM_UPDATED_BY,UPDATED_ON=SYSDATE
     WHERE C_ID=PARAM_USER_ID;
end;
/
 CREATE OR REPLACE PROCEDURE  "LOGIN" 
(PARAM_USERNAME  IN VARCHAR2,
PARAM_PASSWORD  IN VARCHAR2,
PARAM_ROLE  OUT VARCHAR2)
is
CNT NUMBER;

begin
PARAM_ROLE:='NOTAUTHORIZED';
SELECT COUNT(*) INTO CNT FROM CLIENT 
WHERE USER_ID=PARAM_USERNAME AND PASSWORD=PARAM_PASSWORD AND ACC_RIGHT_ID > 0 AND DEL_FLAG=0;
if CNT > 0 then 
     UPDATE CLIENT SET TOTAL_LOGIN=TOTAL_LOGIN+1, LAST_LOGIN=SYSDATE
     WHERE USER_ID=PARAM_USERNAME AND PASSWORD=PARAM_PASSWORD AND ACC_RIGHT_ID > 0 AND DEL_FLAG=0;

     SELECT ACCESS_RIGHT.ACC_RIGHT_DESC INTO PARAM_ROLE
     FROM CLIENT INNER JOIN ACCESS_RIGHT ON CLIENT.ACC_RIGHT_ID = ACCESS_RIGHT.ACC_RIGHT_ID
     WHERE CLIENT.USER_ID=PARAM_USERNAME AND CLIENT.PASSWORD=PARAM_PASSWORD AND CLIENT.ACC_RIGHT_ID > 0 AND CLIENT.DEL_FLAG=0;
ELSE 
    PARAM_ROLE:='NOTAUTHORIZED';
end if;
end;
/
 CREATE OR REPLACE PROCEDURE  "DELETE_USER" 
(
PARAM_UPDATED_BY  IN VARCHAR2,
PARAM_USER_ID IN VARCHAR2)
is
begin
     UPDATE CLIENT SET DEL_FLAG='1', UPDATED_BY=PARAM_UPDATED_BY,UPDATED_ON=SYSDATE
     WHERE C_ID=PARAM_USER_ID;
end;
/
  CREATE SEQUENCE   "CLIENT_ID"  MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 16 NOCACHE  NOORDER  NOCYCLE
/
CREATE OR REPLACE FORCE VIEW  "FULL_VIEW" ("PROBEID", "CGNUMBER", "GENENAME", "FBCGNUMBER", "BIOFUNCTION", "GONUMBER", "EXPERIMENTNAME", "ACTIVECATEGORY", "ACTIVESPECIES", "EXPERIMENTSUBJECT", "REGULATIONVALUE", "ADDITIONALINFO") AS 
  SELECT DISTINCT 
   EXPERIMENT.PROB_ID as "PROBEID",
   REFERENCE_V.CG_NUM as "CGNUMBER",
   REFERENCE_V.GENE_ID as "GENENAME",
   REFERENCE_V.FB_NUM as "FBCGNUMBER",
   REFERENCE_V.NAME as "BIOFUNCTION",   
   REFERENCE_V.GO_ID as "GONUMBER",
   EXPERIMENT.EXP_NAME as "EXPERIMENTNAME",
   EXPERIMENT.CATG as "ACTIVECATEGORY",
   EXPERIMENT.SPEC as "ACTIVESPECIES",  
   EXPERIMENT.SUBJ as "EXPERIMENTSUBJECT",
   EXPERIMENT.REG_VAL as "REGULATIONVALUE", 
   EXPERIMENT.OPEN as "ADDITIONALINFO" 
 FROM  EXPERIMENT LEFT JOIN REFERENCE_V ON  EXPERIMENT.PROB_ID= REFERENCE_V.PROB_ID
	
/
CREATE OR REPLACE FORCE VIEW  "FULL_VIEW_REF" ("PROBEID", "CGNUMBER", "GENENAME", "FBCGNUMBER", "BIOFUNCTION", "GONUMBER", "EXPERIMENTNAME", "ACTIVECATEGORY", "ACTIVESPECIES", "EXPERIMENTSUBJECT", "REGULATIONVALUE", "ADDITIONALINFO") AS 
  SELECT DISTINCT 
   EXPERIMENT.PROB_ID as "PROBEID",
   REFERENCE_V.CG_NUM as "CGNUMBER",
   REFERENCE_V.GENE_ID as "GENENAME",
   REFERENCE_V.FB_NUM as "FBCGNUMBER",
   REFERENCE_V.NAME as "BIOFUNCTION",   
   REFERENCE_V.GO_ID as "GONUMBER",
   EXPERIMENT.EXP_NAME as "EXPERIMENTNAME",
   EXPERIMENT.CATG as "ACTIVECATEGORY",
   EXPERIMENT.SPEC as "ACTIVESPECIES",  
   EXPERIMENT.SUBJ as "EXPERIMENTSUBJECT",
   EXPERIMENT.REG_VAL as "REGULATIONVALUE", 
   EXPERIMENT.OPEN as "ADDITIONALINFO" 
 FROM  EXPERIMENT right JOIN REFERENCE_V ON  EXPERIMENT.PROB_ID= REFERENCE_V.PROB_ID
	
/